/*
 * Moov API
 *
 * _Note_: We're currently in pre-release of our API. We expect breaking changes before launching v1 so please join our [slack organization](http://moov-io.slack.com/) ([request an invite](https://join.slack.com/t/moov-io/shared_invite/enQtNDE5NzIwNTYxODEwLTRkYTcyZDI5ZTlkZWRjMzlhMWVhMGZlOTZiOTk4MmM3MmRhZDY4OTJiMDVjOTE2MGEyNWYzYzY1MGMyMThiZjg)) or [mailing list](https://groups.google.com/forum/#!forum/moov-users) for more updates and notices.  The Moov API is organized around [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer). Our API has predictable, resource-oriented URLs, and uses HTTP response codes to indicate API errors. We use built-in HTTP features, like HTTP authentication and HTTP verbs, which are understood by off-the-shelf HTTP clients. We support [cross-origin resource sharing](http://en.wikipedia.org/wiki/Cross-origin_resource_sharing), allowing you to interact securely with our API from client-side web applications (never expose your secret API key in any public website's client-side code). [JSON](http://www.json.org/) is returned by all API responses, including errors, although you can generate client code via [OpenAPI code generation](https://github.com/OpenAPITools/openapi-generator) or the [OpenAPI editor](https://editor.swagger.io/) to convert responses to appropriate language-specific objects.  The Moov API offers two methods of authentication, Cookie and OAuth2 access tokens. The cookie auth is designed for web browsers while the OAuth2 authentication is designed for automated access of our API.  When an API requires a token generated using OAuth (2-legged), no end user is involved. You generate the token by passing your client credentials (Client ID and Client Secret) in a simple call to Create access token (`/oauth2/token`). The operation returns a token that is valid for a few hours and can be renewed; when it expires, you just repeat the call and get a new token. Making additional token requests will keep generating tokens. There are no hard or soft limits.  Cookie auth is setup by provided (`/users/login`) a valid email and password combination. A `Set-Cookie` header is returned on success, which can be used in later calls. Cookie auth is required to generate OAuth2 client credentials.  The following order of API operations is suggested to start developing against the Moov API:  1. [Create a Moov API user](#operation/createUser) with a unique email address 1. [Login with user/password credentials](#operation/userLogin) 1. [Create an OAuth2 client](#operation/createOAuth2Client) and [Generate an OAuth access token](#operation/createOAuth2Token) 1. Using the OAuth credentials create:    - [Originator](#operation/addOriginator) and [Originator Depository](#operation/addDepository) (requires micro deposit setup)    - [Receiver](#operation/addReceivers) and [Receiver Depository](#operation/addDepository) (requires micro deposit setup) 1. [Submit the Transfer](#operation/addTransfer)  After signup clients can [submit ACH files](#operation/addFile) (either in JSON or plaintext) for [validation](#operation/validateFile) and [tabulation](#operation/getFileContents).  The Moov API offers many services: - Automated Clearing House (ACH) origination and file management - Transfers and ACH Receiver management. - X9 / Image Cash Ledger (ICL) specification support (image uplaod)  ACH is implemented a RESTful API enabling ACH transactions to be submitted and received without a deep understanding of a full NACHA file specification.  An Originator can initiate a Transfer as either a push (credit) or pull (debit) to a Receiver. Originators and Receivers must have a valid Depository account for a Transfer. A Transfer is initiated by an Originator to a Receiver with an amount and flow of funds. ``` Originator                 ->   Gateway   ->   Receiver  - OriginatorDepository                         - ReceiverDepository  - Type   (Push or Pull)  - Amount (USD 12.43)  - Status (Pending)  ```  If you find a security related problem please contact us at [`security@moov.io`](mailto:security@moov.io).
 *
 * API version: v1
 * Contact: security@moov.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

type CashLetterHeader struct {
	// CashLetterHeader ID
	ID string `json:"ID,omitempty"`
	// CollectionTypeIndicator is a code that identifies the type of cash letter.  * `00` - Preliminary Forward Information * `01` - Forward Presentment * `02` - Forward Presentment - Same-Day Settlement * `03` - Return * `04` - Return Notification * `05` - Preliminary Return Notification * `06` - Final Return Notification * `20` - No Detail * `99` - Bundles not the same collection type. Use of the value is only allowed by clearing arrangement.
	CollectionTypeIndicator string `json:"collectionTypeIndicator,omitempty"`
	// DestinationRoutingNumber is the routing and transit number of the institution that receives and processes the cash letter or the bundle.
	DestinationRoutingNumber string `json:"destinationRoutingNumber,omitempty"`
	// ECEInstitutionRoutingNumber is the routing and transit number of the institution that creates the Cash Letter Header record
	ECEInstitutionRoutingNumber string `json:"eCEInstitutionRoutingNumber,omitempty"`
	// cashLetterBusinessDate is the business date of the cash letter. (Format YYYYMMDD, where - YYYY year, MM month, DD day)
	CashLetterBusinessDate string `json:"cashLetterBusinessDate,omitempty"`
	// cashLetterCreationDate is the date that the cash letter is created (Format YYYYMMDD, where - YYYY year, MM month, DD day)
	CashLetterCreationDate time.Time `json:"cashLetterCreationDate,omitempty"`
	// CashLetterCreationTime is the time that the cash letter is created. (Format - hhmm, where - hh hour, mm minute)
	CashLetterCreationTime string `json:"cashLetterCreationTime,omitempty"`
	// RecordTypeIndicator is a code that indicates the presence of records or the type of records contained in the cash letter. If an image is associated with any CheckDetail or Return, the cash letter must have a RecordTypeIndicator of I or F.  * `N` - No electronic check records or image records (Type 2x’s, 3x’s, 5x’s); e.g., an empty cash letter. * `E` - Cash letter contains electronic check records with no images (Type 2x’s and 3x’s only). * `I` - Cash letter contains electronic check records (Type 2x’s, 3x’s) and image records (Type 5x’s). * `F` - Cash letter contains electronic check records (Type 2x’s and 3x’s) and image records (Type 5x’s) that correspond to a previously sent cash letter (i.e., E file).
	RecordTypeIndicator string `json:"recordTypeIndicator,omitempty"`
	// DocumentationTypeIndicator is a code that indicates the type of documentation that supports all check records in the cash letter.  * `A` - No image provided, paper provided separately * `B` - No image provided, paper provided separately, image upon request * `C` - Image provided separately, no paper provided * `D` - Image provided separately, no paper provided, image upon request * `E` - Image and paper provided separately * `F` - Image and paper provided separately, image upon request * `G` - Image included, no paper provided * `H` - Image included, no paper provided, image upon request * `I` - Image included, paper provided separately * `J` - Image included, paper provided separately, image upon request * `K` - No image provided, no paper provided * `L` - No image provided, no paper provided, image upon request * `M` - No image provided, Electronic Check provided separately * `Z` - Not Same Type–Documentation associated with each item in Cash Letter will be different. The Check Detail
	DocumentationTypeIndicator string `json:"documentationTypeIndicator,omitempty"`
	// CashLetterID uniquely identifies the cash letter. It is assigned by the institution that creates the cash letter and must be unique within a Cash Letter Business Date.
	CashLetterID string `json:"cashLetterID,omitempty"`
	// OriginatorContactName is the name of contact at the institution that creates the cash letter.
	OriginatorContactName string `json:"originatorContactName,omitempty"`
	// OriginatorContactPhoneNumber is the phone number of the contact at the institution that creates the cash letter.
	OriginatorContactPhoneNumber string `json:"originatorContactPhoneNumber,omitempty"`
	// fedWorkType is any valid codes specified by the Federal Reserve Bank
	FedWorkType string `json:"fedWorkType,omitempty"`
	// ReturnsIndicator ddentifies type of returns  * ` ` - Original Message * `E` - Administrative - items being returned that are handled by the bank and usually do not directly affect the customer or its account. * `R` - Customer–items being returned that directly affect a customer’s account. * `J` - Reject Return
	ReturnsIndicator string `json:"returnsIndicator,omitempty"`
	// UserField is a field used at the discretion of users of the standard
	UserField string `json:"userField,omitempty"`
}
